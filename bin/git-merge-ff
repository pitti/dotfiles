#!/bin/bash

# Author : Jefromi (http://stackoverflow.com/users/119963/jefromi)
# Source : http://stackoverflow.com/questions/4156957
# Date   : 20101110
# License: unknown
#
# Documentation:
#
# Fast-forward merges are the only case in which you could
# conceivably do this. Any other merge conceivably needs to go
# through the whole three-way merge, applying patches, resolving
# conflicts deal - and that means there need to be files around.
#
#
# I happen to have a script around I use for exactly this:
# doing fast-forward merges without touching the work tree
# (unless you're merging into HEAD).
#
# It's a little long, because it's at least a bit robust -
# it checks to make sure that the merge would be a fast-forward,
# then performs it without checking out the branch, but producing
# the same results as if you had - you see the diff --stat summary
# of changes, and the entry in the reflog is exactly like a fast
# forward merge, instead of the "reset" one you get if you use
# branch -f. If you name it git-merge-ff and drop it in your bin
# directory, you can call it as a git command: git merge-ff.
#

_usage() {
    echo "Usage: git merge-ff [-q] [<branch>] <committish-to-merge>" 1>&2
    exit 1
}

_merge_ff() {

    branch="$1"
    commit="$2"

    branch_orig_hash="$(git show-ref -s --verify refs/heads/$branch 2> /dev/null)"
    if [ $? -ne 0 ]; then
        echo "Error: unknown branch $branch" 1>&2
        _usage
    fi

    commit_orig_hash="$(git rev-parse --verify $commit 2> /dev/null)"
    if [ $? -ne 0 ]; then
        echo "Error: unknown revision $commit" 1>&2
        _usage
    fi

    if [ "$(git symbolic-ref HEAD)" = "refs/heads/$branch" ]; then
        git merge $quiet --ff-only "$commit"
    else
        if [ "$(git merge-base $branch_orig_hash $commit_orig_hash)" != "$branch_orig_hash" ]; then
            echo "Error: merging $commit into $branch would not be a fast-forward" 1>&2
            exit 1
        fi
        echo "Updating ${branch_orig_hash:0:7}..${commit_orig_hash:0:7}"
        if git update-ref -m "merge $commit: Fast forward" \
                          "refs/heads/$branch"             \
                          "$commit_orig_hash"              \
                          "$branch_orig_hash" ;
        then
            if [ -z $quiet ]; then
                echo "Fast forward"
                git diff --stat "$branch@{1}" "$branch"
            fi
        else
            echo "Error: fast forward using update-ref failed" 1>&2
            exit 1
        fi
    fi
}

while getopts "q" opt; do
    case $opt in
        q ) quiet="-q";;
        * ) ;;
    esac
done
shift $((OPTIND-1))

case $# in
    1 ) _merge_ff "$(git symbolic-ref HEAD | sed s#refs/heads/## )" "$1" ;;
    2 ) _merge_ff "$1" "$2" ;;
    * ) _usage
esac
